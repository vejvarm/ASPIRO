{"serves cuisine": {"output": "<subject> serves <object> cuisine.", "error_codes": [], "error_messages": [], "input_data": "[[\"Chiltern Firehouse\", \"serves cuisine\", \"American cuisine\"], [\"Hof van Cleve\", \"serves cuisine\", \"French cuisine\"]]", "subjects": ["Chiltern Firehouse", "Hof van Cleve"], "objects": ["American cuisine", "French cuisine"], "shot": 0}}
{"call sign": {"output": "The call sign of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"MV American Integrity\", \"call sign\", \"WDD2875\"], [\"MS Nordlys\", \"call sign\", \"LHCW\"]]", "subjects": ["MV American Integrity", "MS Nordlys"], "objects": ["WDD2875", "LHCW"], "shot": 0}}
{"logo": {"output": "The <subject> has a logo named <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Irish Car Rentals\", \"logo\", \"ICR-logo.jpg\"], [\"Bank of Mexico\", \"logo\", \"Logobm.svg\"]]", "subjects": ["Irish Car Rentals", "Bank of Mexico"], "objects": ["ICR-logo.jpg", "Logobm.svg"], "shot": 0}}
{"alumni of": {"output": "<subject> is an alumni of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Numa F. Montet\", \"alumni of\", \"Northwestern State University\"], [\"Francis Scarpaleggia\", \"alumni of\", \"Concordia University\"]]", "subjects": ["Numa F. Montet", "Francis Scarpaleggia"], "objects": ["Northwestern State University", "Concordia University"], "shot": 0}}
{"works for": {"output": "<subject> works for <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Esther Armah\", \"works for\", \"Kwesi Armah\"], [\"Adam de Wodeham\", \"works for\", \"William of Ockham\"]]", "subjects": ["Esther Armah", "Adam de Wodeham"], "objects": ["Kwesi Armah", "William of Ockham"], "shot": 0}}
{"music by": {"output": "<object> composed the music for <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Packed in a Trunk: The Lost Art of Edith Lake Wilkinson\", \"music by\", \"Danielle Ate the Sandwich\"], [\"Tales of Symphonia\", \"music by\", \"Motoi Sakuraba\"]]", "subjects": ["Packed in a Trunk: The Lost Art of Edith Lake Wilkinson", "Tales of Symphonia"], "objects": ["Danielle Ate the Sandwich", "Motoi Sakuraba"], "shot": 0}}
{"actor": {"output": "<object> acted in <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Commando\", \"actor\", \"Leo Anch\\u00f3riz\"], [\"Sleeping Acres\", \"actor\", \"Snowy Baker\"]]", "subjects": ["Commando", "Sleeping Acres"], "objects": ["Leo Anch\u00f3riz", "Snowy Baker"], "shot": 0}}
{"duns": {"output": "<subject> has a DUNS number of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Spot Blue International Property\", \"duns\", \"736032835\"], [\"Co bank\", \"duns\", \"075770271\"]]", "subjects": ["Spot Blue International Property", "Co bank"], "objects": ["736032835", "075770271"], "shot": 0}}
{"image": {"output": "Here is the image of <subject>: <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Robert Karabinchak\", \"image\", \"Rob karabinchak.jpg\"]]", "subjects": ["Robert Karabinchak"], "objects": ["Rob karabinchak.jpg"], "shot": 0}}
{"legal status": {"output": "The legal status of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Salbutamol\", \"legal status\", \"Prescription drug\"], [\"Bendroflumethiazide\", \"legal status\", \"Prescription drug\"]]", "subjects": ["Salbutamol", "Bendroflumethiazide"], "objects": ["Prescription drug", "Prescription drug"], "shot": 0}}
{"in language": {"output": "<subject> is written in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Minuscule 850\", \"in language\", \"Ancient Greek\"], [\"Millicent Min, Girl Genius\", \"in language\", \"English language\"]]", "subjects": ["Minuscule 850", "Millicent Min, Girl Genius"], "objects": ["Ancient Greek", "English language"], "shot": 0}}
{"is involved in biological process": {"output": "<subject> is involved in is involved in biological process <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Angiotensin-converting enzyme\", \"is involved in biological process\", \"Kidney development\"], [\"MX1\", \"is involved in biological process\", \"Innate immune system\"]]", "subjects": ["Angiotensin-converting enzyme", "MX1"], "objects": ["Kidney development", "Innate immune system"], "shot": 0}}
{"super event": {"output": "<subject> is a super event of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"2011 Challenge Bell\", \"super event\", \"2011 WTA Tour\"]]", "subjects": ["2011 Challenge Bell"], "objects": ["2011 WTA Tour"], "shot": 0}}
{"issn": {"output": "<subject> has an ISSN of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Billings Gazette\", \"issn\", \"2372-868X\"], [\"Nelson Daily News\", \"issn\", \"0832-431X\"]]", "subjects": ["Billings Gazette", "Nelson Daily News"], "objects": ["2372-868X", "0832-431X"], "shot": 0}}
{"example of work": {"output": "<subject> is an example of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Vetus Latina\", \"example of work\", \"Bible\"]]", "subjects": ["Vetus Latina"], "objects": ["Bible"], "shot": 0}}
{"about": {"output": "<subject> is about <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Tales from Shakespeare\", \"about\", \"The Taming of the Shrew\"], [\"Two Dogmas of Empiricism\", \"about\", \"Logical positivism\"]]", "subjects": ["Tales from Shakespeare", "Two Dogmas of Empiricism"], "objects": ["The Taming of the Shrew", "Logical positivism"], "shot": 0}}
{"connected to": {"output": "<subject> is connected to <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Aditus to mastoid antrum\", \"connected to\", \"Tympanic cavity\"], [\"Ureter\", \"connected to\", \"Renal pelvis\"]]", "subjects": ["Aditus to mastoid antrum", "Ureter"], "objects": ["Tympanic cavity", "Renal pelvis"], "shot": 0}}
{"work example": {"output": "<subject> is a work example of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"A Christmas Carol\", \"work example\", \"A Klingon Christmas Carol\"]]", "subjects": ["A Christmas Carol"], "objects": ["A Klingon Christmas Carol"], "shot": 0}}
{"contains place": {"output": "<subject> contains the place <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Province of Catanzaro\", \"contains place\", \"Martirano\"], [\"Kranenburg, North Rhine-Westphalia\", \"contains place\", \"Frasselt\"]]", "subjects": ["Province of Catanzaro", "Kranenburg, North Rhine-Westphalia"], "objects": ["Martirano", "Frasselt"], "shot": 0}}
{"by artist": {"output": "<object> created <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"The Age of Entitlement\", \"by artist\", \"The Basics\"], [\"Sugarless\", \"by artist\", \"Swami\"]]", "subjects": ["The Age of Entitlement", "Sugarless"], "objects": ["The Basics", "Swami"], "shot": 0}}
{"contributor": {"output": "<object> contributed to <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Simba\", \"contributor\", \"James Baxter\"], [\"Ogura Hyakunin Isshu\", \"contributor\", \"Ry\\u014dzen\"]]", "subjects": ["Simba", "Ogura Hyakunin Isshu"], "objects": ["James Baxter", "Ry\u014dzen"], "shot": 0}}
{"content location": {"output": "<subject> was filmed in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Last Wedding\", \"content location\", \"Vancouver\"], [\"Canci\\u00f3n de Juventud\", \"content location\", \"Catalonia\"]]", "subjects": ["Last Wedding", "Canci\u00f3n de Juventud"], "objects": ["Vancouver", "Catalonia"], "shot": 0}}
{"parent": {"output": "<subject> is the parent of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Claudia Octavia\", \"parent\", \"Claudius\"]]", "subjects": ["Claudia Octavia"], "objects": ["Claudius"], "shot": 0}}
{"smiles": {"output": "<subject> has a SMILES notation of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Testosterone sulfate\", \"smiles\", \"CC12CCC3CCCC34C\"]]", "subjects": ["Testosterone sulfate"], "objects": ["CC12CCC3CCCC34C"], "shot": 0}}
{"encodes bio chem entity": {"output": "<subject> encodes the bio chem entity <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"GNLY\", \"encodes bio chem entity\", \"Granulysin\"], [\"Phosphatidylethanolamine binding protein 1\", \"encodes bio chem entity\", \"Raf kinase inhibitor protein\"]]", "subjects": ["GNLY", "Phosphatidylethanolamine binding protein 1"], "objects": ["Granulysin", "Raf kinase inhibitor protein"], "shot": 0}}
{"sign or symptom": {"output": "<object> is a sign or symptom of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Crohn's disease\", \"sign or symptom\", \"Abdominal pain\"], [\"Stereotypic movement disorder\", \"sign or symptom\", \"Stereotypy\"]]", "subjects": ["Crohn's disease", "Stereotypic movement disorder"], "objects": ["Abdominal pain", "Stereotypy"], "shot": 0}}
{"home location": {"output": "<subject> is located in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Joseph E. Meyer\", \"home location\", \"Meyer's Castle\"], [\"Michael Paul Britto\", \"home location\", \"New York City\"]]", "subjects": ["Joseph E. Meyer", "Michael Paul Britto"], "objects": ["Meyer's Castle", "New York City"], "shot": 0}}
{"telephone": {"output": "The telephone number of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Torpoint Community College\", \"telephone\", \"=+44-1752-812511\"], [\"Knowl Hill School\", \"telephone\", \"=+44-1483-797032\"]]", "subjects": ["Torpoint Community College", "Knowl Hill School"], "objects": ["=+44-1752-812511", "=+44-1483-797032"], "shot": 0}}
{"sub organization": {"output": "<object> is a sub organization of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Resolute Forest Products\", \"sub organization\", \"Abitibi-Consolidated\"], [\"Commonwealth of Nations\", \"sub organization\", \"Commonwealth War Graves Commission\"]]", "subjects": ["Resolute Forest Products", "Commonwealth of Nations"], "objects": ["Abitibi-Consolidated", "Commonwealth War Graves Commission"], "shot": 0}}
{"is encoded by bio chem entity": {"output": "<subject> is encoded by bio chem entity <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Aromatase\", \"is encoded by bio chem entity\", \"Cytochrome p450 family 19 subfamily a member 1\"], [\"Alpha-amylase\", \"is encoded by bio chem entity\", \"AMY1C\"]]", "subjects": ["Aromatase", "Alpha-amylase"], "objects": ["Cytochrome p450 family 19 subfamily a member 1", "AMY1C"], "shot": 0}}
{"competitor": {"output": "<object> participated in the <subject> as a competitor.", "error_codes": [], "error_messages": [], "input_data": "[[\"2018 Tour of Norway\", \"competitor\", \"Sergey Lagutin\"]]", "subjects": ["2018 Tour of Norway"], "objects": ["Sergey Lagutin"], "shot": 0}}
{"knows language": {"output": "<subject> knows the <object> language.", "error_codes": [], "error_messages": [], "input_data": "[[\"Joseph Charles Walsh\", \"knows language\", \"English language\"], [\"Marisa Ferretti Barth\", \"knows language\", \"English language\"]]", "subjects": ["Joseph Charles Walsh", "Marisa Ferretti Barth"], "objects": ["English language", "English language"], "shot": 0}}
{"is located in subcellular location": {"output": "<subject> is located in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Acetylcholinesterase\", \"is located in subcellular location\", \"Basal lamina\"], [\"Basigin\", \"is located in subcellular location\", \"Cell membrane\"]]", "subjects": ["Acetylcholinesterase", "Basigin"], "objects": ["Basal lamina", "Cell membrane"], "shot": 0}}
{"part of series": {"output": "<subject> is a part of the series <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Pilot\", \"part of series\", \"Faking It\"], [\"The Fight Before Christmas\", \"part of series\", \"The Simpsons\"]]", "subjects": ["Pilot", "The Fight Before Christmas"], "objects": ["Faking It", "The Simpsons"], "shot": 0}}
{"encoding format": {"output": "<subject> is encoded in the format <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"M3U\", \"encoding format\", \"x-mpegurl\"]]", "subjects": ["M3U"], "objects": ["x-mpegurl"], "shot": 0}}
{"location created": {"output": "<subject> was created in <object> by someone.", "error_codes": [], "error_messages": [], "input_data": "[[\"View of Bentheim Castle\", \"location created\", \"Haarlem\"], [\"Teodelapio\", \"location created\", \"Spoleto\"]]", "subjects": ["View of Bentheim Castle", "Teodelapio"], "objects": ["Haarlem", "Spoleto"], "shot": 0}}
{"contained in place": {"output": "<subject> is contained in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Moerkerke\", \"contained in place\", \"Damme\"], [\"Borden, Western Australia\", \"contained in place\", \"Division of O'Connor\"]]", "subjects": ["Moerkerke", "Borden, Western Australia"], "objects": ["Damme", "Division of O'Connor"], "shot": 0}}
{"has occupation": {"output": "<subject> is a <object> by occupatio.", "error_codes": [], "error_messages": [], "input_data": "[[\"Tony Maylam\", \"has occupation\", \"Screenwriter\"], [\"Roy Wang\", \"has occupation\", \"Singer-songwriter\"]]", "subjects": ["Tony Maylam", "Roy Wang"], "objects": ["Screenwriter", "Singer-songwriter"], "shot": 0}}
{"isbn": {"output": "The ISBN of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"All Things at Once\", \"isbn\", \"978-1-60286-111-4\"], [\"Asterix and the Chieftain's Shield\", \"isbn\", \"2-01210-143-7\"]]", "subjects": ["All Things at Once", "Asterix and the Chieftain's Shield"], "objects": ["978-1-60286-111-4", "2-01210-143-7"], "shot": 0}}
{"gender": {"output": "<subject> is identified as <object> in terms of gender.", "error_codes": [], "error_messages": [], "input_data": "[[\"Hinaleimoana Wong-Kalu\", \"gender\", \"M\\u0101h\\u016b\"], [\"John the Orphanotrophos\", \"gender\", \"Eunuch\"]]", "subjects": ["Hinaleimoana Wong-Kalu", "John the Orphanotrophos"], "objects": ["M\u0101h\u016b", "Eunuch"], "shot": 0}}
{"children": {"output": "<subject> has children named <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"John Sartorius\", \"children\", \"Francis Sartorius\"], [\"George Hearst\", \"children\", \"William Randolph Hearst\"]]", "subjects": ["John Sartorius", "George Hearst"], "objects": ["Francis Sartorius", "William Randolph Hearst"], "shot": 0}}
{"owns": {"output": "<subject> owns <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Jean-Baptiste Vuillaume\", \"owns\", \"Lauterbach Stradivarius\"], [\"Jacqueline Kennedy Onassis\", \"owns\", \"Wedding dress of Jacqueline Bouvier\"]]", "subjects": ["Jean-Baptiste Vuillaume", "Jacqueline Kennedy Onassis"], "objects": ["Lauterbach Stradivarius", "Wedding dress of Jacqueline Bouvier"], "shot": 0}}
{"is based on": {"output": "<subject> is based on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Cobra Verde\", \"is based on\", \"The Viceroy of Ouidah\"]]", "subjects": ["Cobra Verde"], "objects": ["The Viceroy of Ouidah"], "shot": 0}}
{"character": {"output": "<object> is a character in <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Book of Exodus\", \"character\", \"Amalek\"], [\"Nights of Farewell\", \"character\", \"Marius Petipa\"]]", "subjects": ["Book of Exodus", "Nights of Farewell"], "objects": ["Amalek", "Marius Petipa"], "shot": 0}}
{"founding location": {"output": "<subject> was founded in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Black Hippy\", \"founding location\", \"South Los Angeles\"], [\"Bo\\u00f8wy\", \"founding location\", \"Takasaki\"]]", "subjects": ["Black Hippy", "Bo\u00f8wy"], "objects": ["South Los Angeles", "Takasaki"], "shot": 0}}
{"pagination": {"output": "The <subject> has pagination <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"The Imperialism of Free Trade\", \"pagination\", \"1-15\"]]", "subjects": ["The Imperialism of Free Trade"], "objects": ["1-15"], "shot": 0}}
{"expressed in": {"output": "<subject> is expressed in the <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"BRAF\", \"expressed in\", \"Stomach\"]]", "subjects": ["BRAF"], "objects": ["Stomach"], "shot": 0}}
{"has molecular function": {"output": "<subject> has the molecular function of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"ISCU\", \"has molecular function\", \"Plasma protein binding\"], [\"HLA-G\", \"has molecular function\", \"Plasma protein binding\"]]", "subjects": ["ISCU", "HLA-G"], "objects": ["Plasma protein binding", "Plasma protein binding"], "shot": 0}}
{"lyricist": {"output": "<object> wrote the lyrics for <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Welcome to the Jungle\", \"lyricist\", \"Slash\"], [\"Day by Day\", \"lyricist\", \"Lina Sandell\"]]", "subjects": ["Welcome to the Jungle", "Day by Day"], "objects": ["Slash", "Lina Sandell"], "shot": 0}}
{"provider": {"output": "<object> provided <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Hen with Sapphire Pendant\", \"provider\", \"House of Faberg\\u00e9\"], [\"Mastermind\", \"provider\", \"Parker Brothers\"]]", "subjects": ["Hen with Sapphire Pendant", "Mastermind"], "objects": ["House of Faberg\u00e9", "Parker Brothers"], "shot": 0}}
{"citation": {"output": "<subject> cites <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"1Q84\", \"citation\", \"The Metamorphosis\"]]", "subjects": ["1Q84"], "objects": ["The Metamorphosis"], "shot": 0}}
{"part of season": {"output": "<subject> is a part of <object> seaso.", "error_codes": [], "error_messages": [], "input_data": "[[\"Send in Stewie, Please\", \"part of season\", \"Family Guy\"], [\"Albatross\", \"part of season\", \"Star Trek: The Animated Series\"]]", "subjects": ["Send in Stewie, Please", "Albatross"], "objects": ["Family Guy", "Star Trek: The Animated Series"], "shot": 0}}
{"bio chem interaction": {"output": "<subject> has a bio chem interaction with <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Irinotecan\", \"bio chem interaction\", \"Nelfinavir\"], [\"Domperidone\", \"bio chem interaction\", \"Clarithromycin\"]]", "subjects": ["Irinotecan", "Domperidone"], "objects": ["Nelfinavir", "Clarithromycin"], "shot": 0}}
{"e medicine topic": {"output": "<subject> is an e medicine topic with ID <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Transposition of the great vessels\", \"e medicine topic\", \"2548\"]]", "subjects": ["Transposition of the great vessels"], "objects": ["2548"], "shot": 0}}
{"active cases": {"output": "There are <object> active cases in <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"COVID-19 in Australia\", \"active cases\", \"25318\"], [\"COVID-19 pandemic in the Australian Capital Territory\", \"active cases\", \"495\"]]", "subjects": ["COVID-19 in Australia", "COVID-19 pandemic in the Australian Capital Territory"], "objects": ["25318", "495"], "shot": 0}}
{"project budget total": {"output": "The <subject> has a project budget total of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Swiss Personalized Health Network\", \"project budget total\", \"6.8E7\"], [\"WACOM\", \"project budget total\", \"380000.0\"]]", "subjects": ["Swiss Personalized Health Network", "WACOM"], "objects": ["6.8E7", "380000.0"], "shot": 0}}
{"bioavailability": {"output": "The bioavailability of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Candesartan\", \"bioavailability\", \"15.0\"], [\"Promethazine\", \"bioavailability\", \"88.0\"]]", "subjects": ["Candesartan", "Promethazine"], "objects": ["15.0", "88.0"], "shot": 0}}
{"faculty size": {"output": "<subject> has a faculty size of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Saint Mary's University of Minnesota\", \"faculty size\", \"96\"]]", "subjects": ["Saint Mary's University of Minnesota"], "objects": ["96"], "shot": 0}}
{"final publication year": {"output": "The final publication year of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"British Quarterly Review\", \"final publication year\", \"1886\"], [\"Child Language Teaching and Therapy\", \"final publication year\", \"-1985\"]]", "subjects": ["British Quarterly Review", "Child Language Teaching and Therapy"], "objects": ["1886", "-1985"], "shot": 0}}
{"line length": {"output": "{\"subject_entities\": [\"Goonyella railway line\", \"Chikuhi Line\"],\n\"relation\": \"line length\",\n\"object_entities\": [\"477000.0\", \"42600.0\"],\n\"agnostic_template\": \"The <subject> has a <relation> of <object>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 68 (char 203)\"))"], "input_data": "[[\"Goonyella railway line\", \"line length\", \"477000.0\"], [\"Chikuhi Line\", \"line length\", \"42600.0\"]]", "subjects": ["Goonyella railway line", "Chikuhi Line"], "objects": ["477000.0", "42600.0"], "shot": 0}}
{"maximum depth": {"output": "The maximum depth of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Husemersee\", \"maximum depth\", \"14.3\"], [\"Limassol Salt Lake\", \"maximum depth\", \"1.0\"]]", "subjects": ["Husemersee", "Limassol Salt Lake"], "objects": ["14.3", "1.0"], "shot": 0}}
{"number of lawyers": {"output": "The number of lawyers at <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Littler Mendelson\", \"number of lawyers\", \"1500\"], [\"Taft Stettinius & Hollister\", \"number of lawyers\", \"625\"]]", "subjects": ["Littler Mendelson", "Taft Stettinius & Hollister"], "objects": ["1500", "625"], "shot": 0}}
{"number of stations": {"output": "The <subject> has <object> stations.", "error_codes": [], "error_messages": [], "input_data": "[[\"Line 2\", \"number of stations\", \"23\"], [\"Newark Light Rail\", \"number of stations\", \"17\"]]", "subjects": ["Line 2", "Newark Light Rail"], "objects": ["23", "17"], "shot": 0}}
{"unknown outcomes": {"output": "The <subject> had unknown outcomes of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Falcon 9\", \"unknown outcomes\", \"1\"], [\"New Shepard\", \"unknown outcomes\", \"0\"]]", "subjects": ["Falcon 9", "New Shepard"], "objects": ["1", "0"], "shot": 0}}
{"average depth": {"output": "The average depth of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Carnero Lake\", \"average depth\", \"1.8288\"], [\"Lake Musconetcong\", \"average depth\", \"1.524\"]]", "subjects": ["Carnero Lake", "Lake Musconetcong"], "objects": ["1.8288", "1.524"], "shot": 0}}
{"complexity": {"output": "The complexity of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Confederate cush\", \"complexity\", \"2\"], [\"M\\u0103m\\u0103lig\\u0103\", \"complexity\", \"1\"]]", "subjects": ["Confederate cush", "M\u0103m\u0103lig\u0103"], "objects": ["2", "1"], "shot": 0}}
{"election majority": {"output": "<subject> won the election with a majority of <object> votes.", "error_codes": [], "error_messages": [], "input_data": "[[\"Abdollah Nouri\", \"election majority\", \"448874\"], [\"Abolghasem Khazali\", \"election majority\", \"107311\"]]", "subjects": ["Abdollah Nouri", "Abolghasem Khazali"], "objects": ["448874", "107311"], "shot": 0}}
{"individualised gnd": {"output": "<subject> has an individualised ground with <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Greg Bowen\", \"individualised gnd\", \"320322793\"], [\"PNP transistor\", \"individualised gnd\", \"4174948-0\"]]", "subjects": ["Greg Bowen", "PNP transistor"], "objects": ["320322793", "4174948-0"], "shot": 0}}
{"number of piers in water": {"output": "The <subject> has <object> piers in the water.", "error_codes": [], "error_messages": [], "input_data": "[[\"CPR Bridge\", \"number of piers in water\", \"7\"], [\"Tees Newport Bridge\", \"number of piers in water\", \"2\"]]", "subjects": ["CPR Bridge", "Tees Newport Bridge"], "objects": ["7", "2"], "shot": 0}}
{"number of vehicles": {"output": "{\"subject_entities\": [\"METRORail\", \"Light Rail Transit\"],\n\"relation\": \"number of vehicles\",\n\"object_entities\": [\"39\", \"89\"],\n\"agnostic_template\": \"The <subject> has <object> <relation>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 63 (char 187)\"))"], "input_data": "[[\"METRORail\", \"number of vehicles\", \"39\"], [\"Light Rail Transit\", \"number of vehicles\", \"89\"]]", "subjects": ["METRORail", "Light Rail Transit"], "objects": ["39", "89"], "shot": 0}}
{"number of visitors as of": {"output": "The number of visitors as of <object> for <subject> is number of visitors as of.", "error_codes": [], "error_messages": [], "input_data": "[[\"Booker T. Washington National Monument\", \"number of visitors as of\", \"2012\"], [\"Arlington House, The Robert E. Lee Memorial\", \"number of visitors as of\", \"2011\"]]", "subjects": ["Booker T. Washington National Monument", "Arlington House, The Robert E. Lee Memorial"], "objects": ["2012", "2011"], "shot": 0}}
{"voltage of electrification": {"output": "The voltage of electrification for <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Kolkata Metro\", \"voltage of electrification\", \"750.0\"], [\"Prague Metro\", \"voltage of electrification\", \"750.0\"]]", "subjects": ["Kolkata Metro", "Prague Metro"], "objects": ["750.0", "750.0"], "shot": 0}}
{"approximate calories": {"output": "<subject> has approximately <object> calories.", "error_codes": [], "error_messages": [], "input_data": "[[\"Strained yogurt\", \"approximate calories\", \"557000.0\"], [\"Poga\\u010da\", \"approximate calories\", \"820613.0\"]]", "subjects": ["Strained yogurt", "Poga\u010da"], "objects": ["557000.0", "820613.0"], "shot": 0}}
{"project keyword": {"output": "{\"subject_entities\": [\"Diffused lighting camouflage\", \"Prob onto\"],\n\"relation\": \"project keyword\",\n\"object_entities\": [\"Active camouflage\", \"Statistics,Probability distribution\"],\n\"agnostic_template\": \"<subject> is related to <object> through the <relation>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 81 (char 260)\"))"], "input_data": "[[\"Diffused lighting camouflage\", \"project keyword\", \"Active camouflage\"], [\"Prob onto\", \"project keyword\", \"Statistics,Probability distribution\"]]", "subjects": ["Diffused lighting camouflage", "Prob onto"], "objects": ["Active camouflage", "Statistics,Probability distribution"], "shot": 0}}
{"project start date": {"output": "The <subject> started on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Earth Bio genome Project\", \"project start date\", \"2018-11-01\"], [\"Project Vista\", \"project start date\", \"1951-04-01\"]]", "subjects": ["Earth Bio genome Project", "Project Vista"], "objects": ["2018-11-01", "1951-04-01"], "shot": 0}}
{"world champion title year": {"output": "<subject> won the world champion title in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Ray Reardon\", \"world champion title year\", \"1978\"]]", "subjects": ["Ray Reardon"], "objects": ["1978"], "shot": 0}}
{"act score": {"output": "<subject> has an act score of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"St. Thomas Aquinas High School\", \"act score\", \"ACT\"]]", "subjects": ["St. Thomas Aquinas High School"], "objects": ["ACT"], "shot": 0}}
{"connotation": {"output": "The color <subject> is often associated with <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Persian blue\", \"connotation\", \"Heaven\"]]", "subjects": ["Persian blue"], "objects": ["Heaven"], "shot": 0}}
{"cultivated variety": {"output": "<subject> is a cultivated variety developed by <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Nepenthes 'Vittata'\", \"cultivated variety\", \"Bruce Lee Bednar\"]]", "subjects": ["Nepenthes 'Vittata'"], "objects": ["Bruce Lee Bednar"], "shot": 0}}
{"focus": {"output": "<subject> focuses on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Emergency medicine\", \"focus\", \"Acute\"], [\"Anesthesiology\", \"focus\", \"Anesthesia\"]]", "subjects": ["Emergency medicine", "Anesthesiology"], "objects": ["Acute", "Anesthesia"], "shot": 0}}
{"funded by": {"output": "<subject> is funded by <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"TREAT-NMD\", \"funded by\", \"European Commission\"]]", "subjects": ["TREAT-NMD"], "objects": ["European Commission"], "shot": 0}}
{"gdp per capita": {"output": "{\"subject_entities\": [\"Song dynasty\"],\n\"relation\": \"gdp per capita\",\n\"object_entities\": [\"26.5\"],\n\"agnostic_template\": \"The <relation> of <subject> was <object>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 66 (char 163)\"))"], "input_data": "[[\"Song dynasty\", \"gdp per capita\", \"26.5\"]]", "subjects": ["Song dynasty"], "objects": ["26.5"], "shot": 0}}
{"glycemic index": {"output": "The glycemic index of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Oat milk\", \"glycemic index\", \"60\"]]", "subjects": ["Oat milk"], "objects": ["60"], "shot": 0}}
{"map": {"output": "The <subject> is mapped by <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Outer Ring Road System\", \"map\", \"Singapores Expressways\"]]", "subjects": ["Outer Ring Road System"], "objects": ["Singapores Expressways"], "shot": 0}}
{"organ system": {"output": "<subject> is a part of the <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Primary interatrial foramen\", \"organ system\", \"Circulatory system\"], [\"Sex cords\", \"organ system\", \"Reproductive system\"]]", "subjects": ["Primary interatrial foramen", "Sex cords"], "objects": ["Circulatory system", "Reproductive system"], "shot": 0}}
{"project end date": {"output": "The <subject> project ended on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Project Vista\", \"project end date\", \"1951-12-01\"], [\"INDECT\", \"project end date\", \"2014-06-30\"]]", "subjects": ["Project Vista", "INDECT"], "objects": ["1951-12-01", "2014-06-30"], "shot": 0}}
{"release location": {"output": "<subject> was released in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Whiteout\", \"release location\", \"Japan\"]]", "subjects": ["Whiteout"], "objects": ["Japan"], "shot": 0}}
{"vehicle": {"output": "<object> is a vehicle built on the <subject> platform.", "error_codes": [], "error_messages": [], "input_data": "[[\"General Motors W platform\", \"vehicle\", \"Oldsmobile Intrigue\"], [\"General Motors Epsilon platform\", \"vehicle\", \"Cadillac XTS\"]]", "subjects": ["General Motors W platform", "General Motors Epsilon platform"], "objects": ["Oldsmobile Intrigue", "Cadillac XTS"], "shot": 0}}
{"victim": {"output": "<object> was a victim of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Drancy internment camp\", \"victim\", \"Eduard Bloch\"], [\"Westerbork transit camp\", \"victim\", \"Selma Engel-Wijnberg\"]]", "subjects": ["Drancy internment camp", "Westerbork transit camp"], "objects": ["Eduard Bloch", "Selma Engel-Wijnberg"], "shot": 0}}
{"waterway through tunnel": {"output": "<subject> is a waterway through tunnel that passes through <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Foulridge Tunnel\", \"waterway through tunnel\", \"Leeds and Liverpool Canal\"], [\"Riqueval Tunnel\", \"waterway through tunnel\", \"Canal de Saint-Quentin\"]]", "subjects": ["Foulridge Tunnel", "Riqueval Tunnel"], "objects": ["Leeds and Liverpool Canal", "Canal de Saint-Quentin"], "shot": 0}}
{"address in road": {"output": "<subject> is located at <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Queen's Square, Sydney\", \"address in road\", \"Phillip Street, Sydney\"], [\"Aberdeen Street\", \"address in road\", \"Central, Hong Kong\"]]", "subjects": ["Queen's Square, Sydney", "Aberdeen Street"], "objects": ["Phillip Street, Sydney", "Central, Hong Kong"], "shot": 0}}
{"denomination": {"output": "<subject> is affiliated with the <object> denominatio.", "error_codes": [], "error_messages": [], "input_data": "[[\"Bethlehem High School\", \"denomination\", \"Catholic Church\"], [\"Legacy Christian Academy\", \"denomination\", \"Non-denominational\"]]", "subjects": ["Bethlehem High School", "Legacy Christian Academy"], "objects": ["Catholic Church", "Non-denominational"], "shot": 0}}
{"highest": {"output": "<subject> has <object> as its highest point.", "error_codes": [], "error_messages": [], "input_data": "[[\"Jicarilla Mountains\", \"highest\", \"Ancho Peak\"], [\"Croda da Lago\", \"highest\", \"Cima d'Ambrizzola\"]]", "subjects": ["Jicarilla Mountains", "Croda da Lago"], "objects": ["Ancho Peak", "Cima d'Ambrizzola"], "shot": 0}}
{"selection": {"output": "<subject> was selected for <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Christina Koch\", \"selection\", \"NASA Astronaut Group 21\"]]", "subjects": ["Christina Koch"], "objects": ["NASA Astronaut Group 21"], "shot": 0}}
{"sport country": {"output": "<subject> represents <object> in sport country.", "error_codes": [], "error_messages": [], "input_data": "[[\"Yousra Matine\", \"sport country\", \"Morocco\"], [\"Zhou Yuelong\", \"sport country\", \"China\"]]", "subjects": ["Yousra Matine", "Zhou Yuelong"], "objects": ["Morocco", "China"], "shot": 0}}
{"battery": {"output": "<subject> uses <object> as its battery.", "error_codes": [], "error_messages": [], "input_data": "[[\"Hiriko\", \"battery\", \"Lithium-ion battery\"], [\"Nissan Kicks P15 1\", \"battery\", \"Panasonic\"]]", "subjects": ["Hiriko", "Nissan Kicks P15 1"], "objects": ["Lithium-ion battery", "Panasonic"], "shot": 0}}
{"current production": {"output": "The current production at <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Mercury Theatre, Colchester\", \"current production\", \"Educating Rita\"], [\"Apollo Theatre\", \"current production\", \"Magic Goes Wrong\"]]", "subjects": ["Mercury Theatre, Colchester", "Apollo Theatre"], "objects": ["Educating Rita", "Magic Goes Wrong"], "shot": 0}}
{"taoiseach": {"output": "<object> served as the taoiseach during the tenure of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Fergus O'Brien Tenure 1\", \"taoiseach\", \"Garret Fitz gerald\"]]", "subjects": ["Fergus O'Brien Tenure 1"], "objects": ["Garret Fitz gerald"], "shot": 0}}
{"age range": {"output": "The age range of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Sir John Kothalawala College\", \"age range\", \"6\"], [\"Lao People's Armed Forces\", \"age range\", \"18\"]]", "subjects": ["Sir John Kothalawala College", "Lao People's Armed Forces"], "objects": ["6", "18"], "shot": 0}}
{"bbr": {"output": "<object> is related to <subject> through bbr.", "error_codes": [], "error_messages": [], "input_data": "[[\"Andy Johnson\", \"bbr\", \"johnsan01\"], [\"Bob Hopkins Bob Hopkins 1\", \"bbr\", \"hopkibo01\"]]", "subjects": ["Andy Johnson", "Bob Hopkins Bob Hopkins 1"], "objects": ["johnsan01", "hopkibo01"], "shot": 0}}
{"coden": {"output": "The coden for <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Journal of Nanoparticle Research\", \"coden\", \"JNARFA\"], [\"Comprehensive Reviews in Food Science and Food Safety\", \"coden\", \"CRFSBJ\"]]", "subjects": ["Journal of Nanoparticle Research", "Comprehensive Reviews in Food Science and Food Safety"], "objects": ["JNARFA", "CRFSBJ"], "shot": 0}}
{"currently used for": {"output": "<subject> is currently used for <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Byham Theater\", \"currently used for\", \"Performing arts center\"], [\"San Diego Civic Theatre\", \"currently used for\", \"performing arts venue\"]]", "subjects": ["Byham Theater", "San Diego Civic Theatre"], "objects": ["Performing arts center", "performing arts venue"], "shot": 0}}
{"demolition date": {"output": "<subject> was demolished on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Hotel Manger\", \"demolition date\", \"1983-05-15\"], [\"Tiffany Theater\", \"demolition date\", \"2013-08-08\"]]", "subjects": ["Hotel Manger", "Tiffany Theater"], "objects": ["1983-05-15", "2013-08-08"], "shot": 0}}
{"impact factor as of": {"output": "The impact factor of <subject> as of <object> is unknow.", "error_codes": [], "error_messages": [], "input_data": "[[\"Environment and Behavior\", \"impact factor as of\", \"2019\"]]", "subjects": ["Environment and Behavior"], "objects": ["2019"], "shot": 0}}
{"last air date": {"output": "<subject> last aired on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Ideal TV\", \"last air date\", \"2009-07-20\"], [\"Radio Luxembourg\", \"last air date\", \"1992-12-30\"]]", "subjects": ["Ideal TV", "Radio Luxembourg"], "objects": ["2009-07-20", "1992-12-30"], "shot": 0}}
{"maximum elevation": {"output": "The maximum elevation of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Lurcy-L\\u00e9vis\", \"maximum elevation\", \"283.0\"], [\"Macau, Gironde\", \"maximum elevation\", \"26.0\"]]", "subjects": ["Lurcy-L\u00e9vis", "Macau, Gironde"], "objects": ["283.0", "26.0"], "shot": 0}}
{"military command": {"output": "<subject> was in military command of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"John Odaate \\u2013 Barnor\", \"military command\", \"Commandant of the Armed Forces Staff College\"], [\"Konstantin Avksentevsky\", \"military command\", \"6th Army\"]]", "subjects": ["John Odaate \u2013 Barnor", "Konstantin Avksentevsky"], "objects": ["Commandant of the Armed Forces Staff College", "6th Army"], "shot": 0}}
{"number of offices": {"output": "<subject> has <object> offices.", "error_codes": [], "error_messages": [], "input_data": "[[\"Wilson Elser Moskowitz Edelman & Dicker\", \"number of offices\", \"38\"], [\"Fountain Court Chambers\", \"number of offices\", \"2\"]]", "subjects": ["Wilson Elser Moskowitz Edelman & Dicker", "Fountain Court Chambers"], "objects": ["38", "2"], "shot": 0}}
{"open access content": {"output": "{\"subject_entities\": [\"Journal of Transport and Land Use\", \"Materials Today\"],\n\"relation\": \"open access content\",\n\"object_entities\": [\"Yes\", \"No\"],\n\"agnostic_template\": \"<subject> has <object> <relation>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 59 (char 206)\"))"], "input_data": "[[\"Journal of Transport and Land Use\", \"open access content\", \"Yes\"], [\"Materials Today\", \"open access content\", \"No\"]]", "subjects": ["Journal of Transport and Land Use", "Materials Today"], "objects": ["Yes", "No"], "shot": 0}}
{"passengers per day": {"output": "The <subject> has <object> passengers per day.", "error_codes": [], "error_messages": [], "input_data": "[[\"Wuxi Metro\", \"passengers per day\", \"223200\"], [\"Codiac Transpo\", \"passengers per day\", \"5192\"]]", "subjects": ["Wuxi Metro", "Codiac Transpo"], "objects": ["223200", "5192"], "shot": 0}}
{"passengers used system": {"output": "<subject> is serviced by <object> for passengers used system.", "error_codes": [], "error_messages": [], "input_data": "[[\"Chester Hill railway station\", \"passengers used system\", \"Sydney Trains, NSW Train link\"], [\"Bois-Franc station\", \"passengers used system\", \"Exo\"]]", "subjects": ["Chester Hill railway station", "Bois-Franc station"], "objects": ["Sydney Trains, NSW Train link", "Exo"], "shot": 0}}
{"project budget funding": {"output": "The <subject> project received <object> in funding for project budget funding.", "error_codes": [], "error_messages": [], "input_data": "[[\"INDECT\", \"project budget funding\", \"1.0906984E7\"], [\"ETOX\", \"project budget funding\", \"1.87E7\"]]", "subjects": ["INDECT", "ETOX"], "objects": ["1.0906984E7", "1.87E7"], "shot": 0}}
{"reporting mark": {"output": "<subject> has the reporting mark <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Idaho and Washington Northern Railroad\", \"reporting mark\", \"I&WN\"]]", "subjects": ["Idaho and Washington Northern Railroad"], "objects": ["I&WN"], "shot": 0}}
{"track length": {"output": "{\"subject_entities\": [\"Metropolitan Street Railway\", \"Viramgam\\u2013Maliya Miyana section\"],\n\"relation\": \"track length\",\n\"object_entities\": [\"77000.0\", \"142000.0\"],\n\"agnostic_template\": \"The <subject> has a track length of <object>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 70 (char 234)\"))"], "input_data": "[[\"Metropolitan Street Railway\", \"track length\", \"77000.0\"], [\"Viramgam\\u2013Maliya Miyana section\", \"track length\", \"142000.0\"]]", "subjects": ["Metropolitan Street Railway", "Viramgam\u2013Maliya Miyana section"], "objects": ["77000.0", "142000.0"], "shot": 0}}
{"gini coefficient": {"output": "The gini coefficient of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Ghana\", \"gini coefficient\", \"43.5\"], [\"Myanmar\", \"gini coefficient\", \"30.7\"]]", "subjects": ["Ghana", "Myanmar"], "objects": ["43.5", "30.7"], "shot": 0}}
{"reopening date": {"output": "The <subject> reopened on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Shea's Performing Arts Center\", \"reopening date\", \"1976-02-25\"], [\"Estadio Municipal Germ\\u00e1n Becker\", \"reopening date\", \"2008-11-05\"]]", "subjects": ["Shea's Performing Arts Center", "Estadio Municipal Germ\u00e1n Becker"], "objects": ["1976-02-25", "2008-11-05"], "shot": 0}}
{"broadcast network": {"output": "<object> is the broadcast network of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"WFNY\", \"broadcast network\", \"Fox News Radio\"], [\"WLTP\", \"broadcast network\", \"Cleveland Cavaliers Radio Network\"]]", "subjects": ["WFNY", "WLTP"], "objects": ["Fox News Radio", "Cleveland Cavaliers Radio Network"], "shot": 0}}
{"chain": {"output": "<object> is the chain of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Corinthia Hotel Budapest\", \"chain\", \"Corinthia Hotels International\"], [\"The George Hotel, Reading\", \"chain\", \"Mercure\"]]", "subjects": ["Corinthia Hotel Budapest", "The George Hotel, Reading"], "objects": ["Corinthia Hotels International", "Mercure"], "shot": 0}}
{"champion": {"output": "<object> won the champion in <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"1905 Open Championship\", \"champion\", \"James Braid\"], [\"1978 LPGA Championship\", \"champion\", \"Nancy Lopez\"]]", "subjects": ["1905 Open Championship", "1978 LPGA Championship"], "objects": ["James Braid", "Nancy Lopez"], "shot": 0}}
{"champion in double female": {"output": "<object> won the champion in double female at <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"2021 Mutua Madrid Open\", \"champion in double female\", \"Kate\\u0159ina Siniakov\\u00e1\"], [\"1984 Wimbledon Championships\", \"champion in double female\", \"Pam Shriver\"]]", "subjects": ["2021 Mutua Madrid Open", "1984 Wimbledon Championships"], "objects": ["Kate\u0159ina Siniakov\u00e1", "Pam Shriver"], "shot": 0}}
{"champion in double male": {"output": "<object> won the champion in double male at <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"1997 Grand Prix Hassan II\", \"champion in double male\", \"Jo\\u00e3o Cunha e Silva\"], [\"1987 US Open\", \"champion in double male\", \"Stefan Edberg\"]]", "subjects": ["1997 Grand Prix Hassan II", "1987 US Open"], "objects": ["Jo\u00e3o Cunha e Silva", "Stefan Edberg"], "shot": 0}}
{"champion in mixed double": {"output": "<object> won the champion in mixed double in <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"1971 French Open\", \"champion in mixed double\", \"Fran\\u00e7oise D\\u00fcrr\"], [\"1991 French Open\", \"champion in mixed double\", \"Cyril Suk\"]]", "subjects": ["1971 French Open", "1991 French Open"], "objects": ["Fran\u00e7oise D\u00fcrr", "Cyril Suk"], "shot": 0}}
{"champion in single female": {"output": "<object> won the champion in single female in <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"1997 Japan Open Tennis Championships\", \"champion in single female\", \"Ai Sugiyama\"], [\"1999 NCAA Division I Women's Tennis Championships\", \"champion in single female\", \"Zuzana Le\\u0161enarov\\u00e1\"]]", "subjects": ["1997 Japan Open Tennis Championships", "1999 NCAA Division I Women's Tennis Championships"], "objects": ["Ai Sugiyama", "Zuzana Le\u0161enarov\u00e1"], "shot": 0}}
{"champion in single male": {"output": "<object> won the champion in single male in <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"1969 Cincinnati Open\", \"champion in single male\", \"Cliff Richey\"], [\"2012 President's Cup\", \"champion in single male\", \"Evgeny Donskoy\"]]", "subjects": ["1969 Cincinnati Open", "2012 President's Cup"], "objects": ["Cliff Richey", "Evgeny Donskoy"], "shot": 0}}
{"computing platform": {"output": "<object> is the computing platform for <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Loco-Motion\", \"computing platform\", \"Tomy Tutor\"], [\"A Duel Hand Disaster: Trackher\", \"computing platform\", \"Microsoft Windows\"]]", "subjects": ["Loco-Motion", "A Duel Hand Disaster: Trackher"], "objects": ["Tomy Tutor", "Microsoft Windows"], "shot": 0}}
{"cover artist": {"output": "<object> created the cover art for <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Q-Squared\", \"cover artist\", \"Keith Birdsong\"], [\"Universe 11\", \"cover artist\", \"Roger Zimmerman\"]]", "subjects": ["Q-Squared", "Universe 11"], "objects": ["Keith Birdsong", "Roger Zimmerman"], "shot": 0}}
{"has variant": {"output": "<subject> has has variant called <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Carrot cake\", \"has variant\", \"Kirsch\"]]", "subjects": ["Carrot cake"], "objects": ["Kirsch"], "shot": 0}}
{"hybrid": {"output": "<subject> is a hybrid of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Rhino Horn bananas\", \"hybrid\", \"Musa acuminata\"], [\"Rosa 'Chicago Peace'\", \"hybrid\", \"Sport\"]]", "subjects": ["Rhino Horn bananas", "Rosa 'Chicago Peace'"], "objects": ["Musa acuminata", "Sport"], "shot": 0}}
{"kingdom": {"output": "<subject> belongs to the kingdom <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Eunidia kristenseni\", \"kingdom\", \"Animal\"], [\"Athleta boswellae\", \"kingdom\", \"Animal\"]]", "subjects": ["Eunidia kristenseni", "Athleta boswellae"], "objects": ["Animal", "Animal"], "shot": 0}}
{"location city": {"output": "<subject> is located in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Electric Ireland\", \"location city\", \"Dublin\"], [\"Henri Lloyd\", \"location city\", \"Gothenburg\"]]", "subjects": ["Electric Ireland", "Henri Lloyd"], "objects": ["Dublin", "Gothenburg"], "shot": 0}}
{"location country": {"output": "<subject> is located in the country of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Southeast Television\", \"location country\", \"China\"], [\"Himalaya TV\", \"location country\", \"Nepal\"]]", "subjects": ["Southeast Television", "Himalaya TV"], "objects": ["China", "Nepal"], "shot": 0}}
{"lyrics": {"output": "<object> wrote the lyrics for <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Something Rotten!\", \"lyrics\", \"Karey Kirkpatrick\"], [\"The Sea Cabinet\", \"lyrics\", \"Gwyneth Herbert\"]]", "subjects": ["Something Rotten!", "The Sea Cabinet"], "objects": ["Karey Kirkpatrick", "Gwyneth Herbert"], "shot": 0}}
{"meeting road": {"output": "{\"subject_entities\": [\"Harbanspura Interchange\", \"Springs Junction\"],\n\"relation\": \"meeting road\",\n\"object_entities\": [\"Lahore Ring Road\", \"State Highway 65\"],\n\"agnostic_template\": \"<subject> is located at the meeting point of <object>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 79 (char 237)\"))"], "input_data": "[[\"Harbanspura Interchange\", \"meeting road\", \"Lahore Ring Road\"], [\"Springs Junction\", \"meeting road\", \"State Highway 65\"]]", "subjects": ["Harbanspura Interchange", "Springs Junction"], "objects": ["Lahore Ring Road", "State Highway 65"], "shot": 0}}
{"music type": {"output": "<subject> is a <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"All I Have\", \"music type\", \"Single\"], [\"Red Velvet\", \"music type\", \"Single\"]]", "subjects": ["All I Have", "Red Velvet"], "objects": ["Single", "Single"], "shot": 0}}
{"non fiction subject": {"output": "<subject> is a non-fiction subject of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Shell Shock\", \"non fiction subject\", \"Peri Brown\"]]", "subjects": ["Shell Shock"], "objects": ["Peri Brown"], "shot": 0}}
{"original language": {"output": "<subject> was originally written in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Elves' Hill\", \"original language\", \"Danish language\"], [\"Phaedra's Love\", \"original language\", \"English language\"]]", "subjects": ["Elves' Hill", "Phaedra's Love"], "objects": ["Danish language", "English language"], "shot": 0}}
{"phylum": {"output": "<object> is the phylum of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Euriphene conjungens\", \"phylum\", \"Arthropod\"], [\"Apicalia\", \"phylum\", \"Mollusca\"]]", "subjects": ["Euriphene conjungens", "Apicalia"], "objects": ["Arthropod", "Mollusca"], "shot": 0}}
{"political party in legislature": {"output": "<subject> is affiliated with the <object> in the legislature.", "error_codes": [], "error_messages": [], "input_data": "[[\"Trafford Council\", \"political party in legislature\", \"Labour Party\"]]", "subjects": ["Trafford Council"], "objects": ["Labour Party"], "shot": 0}}
{"political party of leader": {"output": "The leader of <subject> belongs to the <object> party.", "error_codes": [], "error_messages": [], "input_data": "[[\"Oakland City Council\", \"political party of leader\", \"Democratic Party\"]]", "subjects": ["Oakland City Council"], "objects": ["Democratic Party"], "shot": 0}}
{"politician": {"output": "<object> is a politician of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Kira Town\", \"politician\", \"Ibrahim Ssemujju Nganda\"], [\"Hedmark Political function 2\", \"politician\", \"Centre Party\"]]", "subjects": ["Kira Town", "Hedmark Political function 2"], "objects": ["Ibrahim Ssemujju Nganda", "Centre Party"], "shot": 0}}
{"population place": {"output": "<subject> is a population place in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Pattusali\", \"population place\", \"Tamil Nadu\"], [\"French Canadians\", \"population place\", \"Quebec\"]]", "subjects": ["Pattusali", "French Canadians"], "objects": ["Tamil Nadu", "Quebec"], "shot": 0}}
{"premiere place": {"output": "<subject> premiered at <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Hurlyburly\", \"premiere place\", \"Goodman Theatre\"], [\"Wits Led by the Nose\", \"premiere place\", \"London\"]]", "subjects": ["Hurlyburly", "Wits Led by the Nose"], "objects": ["Goodman Theatre", "London"], "shot": 0}}
{"programme format": {"output": "<subject> broadcasts in the <object> programme format.", "error_codes": [], "error_messages": [], "input_data": "[[\"WEGS\", \"programme format\", \"Christian radio\"], [\"KEUN-FM\", \"programme format\", \"Swamp pop\"]]", "subjects": ["WEGS", "KEUN-FM"], "objects": ["Christian radio", "Swamp pop"], "shot": 0}}
{"project coordinator": {"output": "<object> is the project coordinator of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Project Vista\", \"project coordinator\", \"William Alfred Fowler\"]]", "subjects": ["Project Vista"], "objects": ["William Alfred Fowler"], "shot": 0}}
{"project participant": {"output": "<object> is a project participant of <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"ETOX\", \"project participant\", \"Esteve\"]]", "subjects": ["ETOX"], "objects": ["Esteve"], "shot": 0}}
{"route end": {"output": "The <subject> ends at <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Virginia State Route 20\", \"route end\", \"Wilderness, Virginia\"], [\"State Highway 246\", \"route end\", \"Mowad\"]]", "subjects": ["Virginia State Route 20", "State Highway 246"], "objects": ["Wilderness, Virginia", "Mowad"], "shot": 0}}
{"route junction": {"output": "<subject> intersects with <object> at a route junction.", "error_codes": [], "error_messages": [], "input_data": "[[\"New Jersey Route 120\", \"route junction\", \"East Rutherford, New Jersey\"], [\"National Highway 44\", \"route junction\", \"Dindigul\"]]", "subjects": ["New Jersey Route 120", "National Highway 44"], "objects": ["East Rutherford, New Jersey", "Dindigul"], "shot": 0}}
{"route start": {"output": "<subject> starts at <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Massachusetts Route 143\", \"route start\", \"Hinsdale, Massachusetts\"], [\"New York State Route 91\", \"route start\", \"Truxton, New York\"]]", "subjects": ["Massachusetts Route 143", "New York State Route 91"], "objects": ["Hinsdale, Massachusetts", "Truxton, New York"], "shot": 0}}
{"serving railway line": {"output": "<subject> serves the <object> railway line.", "error_codes": [], "error_messages": [], "input_data": "[[\"Mainz Hauptbahnhof\", \"serving railway line\", \"West Rhine Railway\"], [\"Davos Laret railway station\", \"serving railway line\", \"Landquart\\u2013Davos Platz railway line\"]]", "subjects": ["Mainz Hauptbahnhof", "Davos Laret railway station"], "objects": ["West Rhine Railway", "Landquart\u2013Davos Platz railway line"], "shot": 0}}
{"used in war": {"output": "<subject> was used in <object> during used in war.", "error_codes": [], "error_messages": [], "input_data": "[[\"IWI ACE\", \"used in war\", \"Mexican drug war\"], [\"RPG-43\", \"used in war\", \"The Troubles\"]]", "subjects": ["IWI ACE", "RPG-43"], "objects": ["Mexican drug war", "The Troubles"], "shot": 0}}
{"webcast": {"output": "<subject> can be webcasted through <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"WPHP\", \"webcast\", \"wphs.m3u\"], [\"Radio Veronica\", \"webcast\", \"veronica-rockradio\"]]", "subjects": ["WPHP", "Radio Veronica"], "objects": ["wphs.m3u", "veronica-rockradio"], "shot": 0}}
{"assets": {"output": "{\"subject_entities\": [\"Bankia\", \"Unocal Corporation\"],\n\"relation\": \"assets\",\n\"object_entities\": [\"1.79098E11\", \"1.3101E10\"],\n\"agnostic_template\": \"<subject> has <relation> worth <object>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 65 (char 189)\"))"], "input_data": "[[\"Bankia\", \"assets\", \"1.79098E11\"], [\"Unocal Corporation\", \"assets\", \"1.3101E10\"]]", "subjects": ["Bankia", "Unocal Corporation"], "objects": ["1.79098E11", "1.3101E10"], "shot": 0}}
{"bicycle information": {"output": "The bicycle information at <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Sanagu Station\", \"bicycle information\", \"Available\"], [\"Kwasa Sentral MRT station\", \"bicycle information\", \"Not available\"]]", "subjects": ["Sanagu Station", "Kwasa Sentral MRT station"], "objects": ["Available", "Not available"], "shot": 0}}
{"bridge carries": {"output": "<subject> carries <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Catlin Covered Bridge\", \"bridge carries\", \"Pedestrian traffic\"], [\"Jiangjiehe Bridge\", \"bridge carries\", \"S205 provincial road\"]]", "subjects": ["Catlin Covered Bridge", "Jiangjiehe Bridge"], "objects": ["Pedestrian traffic", "S205 provincial road"], "shot": 0}}
{"building end date": {"output": "The <subject> was completed in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Lottie Moon House\", \"building end date\", \"1831\"], [\"Fort San Lucian\", \"building end date\", \"1610\\u20131611\"]]", "subjects": ["Lottie Moon House", "Fort San Lucian"], "objects": ["1831", "1610\u20131611"], "shot": 0}}
{"capacity": {"output": "The capacity of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"A.S.D. Fersina Perginese\", \"capacity\", \"2000\"], [\"AS Vacoas-Phoenix\", \"capacity\", \"6200\"]]", "subjects": ["A.S.D. Fersina Perginese", "AS Vacoas-Phoenix"], "objects": ["2000", "6200"], "shot": 0}}
{"casualties": {"output": "There were <object> reported casualties in <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"2017 Batangas earthquakes\", \"casualties\", \"6\"], [\"2020 Oaxaca earthquake\", \"casualties\", \"10\"]]", "subjects": ["2017 Batangas earthquakes", "2020 Oaxaca earthquake"], "objects": ["6", "10"], "shot": 0}}
{"ch eMBL": {"output": "<subject> has a ch eMBL of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Bicifadine\", \"ch eMBL\", \"511099\"]]", "subjects": ["Bicifadine"], "objects": ["511099"], "shot": 0}}
{"classification": {"output": "<subject> has a classification of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Blake Marler\", \"classification\", \"Final, recurring\"]]", "subjects": ["Blake Marler"], "objects": ["Final, recurring"], "shot": 0}}
{"colour name": {"output": "The color of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Undibacterium pigrum\", \"colour name\", \"lightgrey\"], [\"Pyotr Alexeyev' Resistance Movement\", \"colour name\", \"Red\"]]", "subjects": ["Undibacterium pigrum", "Pyotr Alexeyev' Resistance Movement"], "objects": ["lightgrey", "Red"], "shot": 0}}
{"confirmed cases": {"output": "{\"subject_entities\": [\"1896 Gloucester smallpox epidemic\", \"COVID-19 pandemic in Alberta\"],\n\"relation\": \"confirmed cases\",\n\"object_entities\": [\"2000\", \"335247\"],\n\"agnostic_template\": \"There were <object> confirmed cases during the <subject>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 82 (char 243)\"))"], "input_data": "[[\"1896 Gloucester smallpox epidemic\", \"confirmed cases\", \"2000\"], [\"COVID-19 pandemic in Alberta\", \"confirmed cases\", \"335247\"]]", "subjects": ["1896 Gloucester smallpox epidemic", "COVID-19 pandemic in Alberta"], "objects": ["2000", "335247"], "shot": 0}}
{"description": {"output": "The <subject> is a <object> description.", "error_codes": [], "error_messages": [], "input_data": "[[\"Bor Dahegaon Dam\", \"description\", \"Earthfill\"], [\"Kabeli B1 Hydropower Station\", \"description\", \"Gravity\"]]", "subjects": ["Bor Dahegaon Dam", "Kabeli B1 Hydropower Station"], "objects": ["Earthfill", "Gravity"], "shot": 0}}
{"election date leader": {"output": "The leader of <subject> will be elected on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"National Council\", \"election date leader\", \"2020-12-15\"]]", "subjects": ["National Council"], "objects": ["2020-12-15"], "shot": 0}}
{"elevation": {"output": "The elevation of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Niuatoputapu Airport\", \"elevation\", \"9.0\"], [\"Sauk City, Washington\", \"elevation\", \"71.9328\"]]", "subjects": ["Niuatoputapu Airport", "Sauk City, Washington"], "objects": ["9.0", "71.9328"], "shot": 0}}
{"end date": {"output": "The <subject> ended on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Video Games Live\", \"end date\", \"2018-11-17\"], [\"South Ossetia Historical event 3\", \"end date\", \"2008-08-26\"]]", "subjects": ["Video Games Live", "South Ossetia Historical event 3"], "objects": ["2018-11-17", "2008-08-26"], "shot": 0}}
{"fatality rate": {"output": "The <subject> had a fatality rate of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Dengue pandemic in Sri Lanka\", \"fatality rate\", \"2020\"], [\"2018 Nipah virus outbreak in Kerala\", \"fatality rate\", \"89\"]]", "subjects": ["Dengue pandemic in Sri Lanka", "2018 Nipah virus outbreak in Kerala"], "objects": ["2020", "89"], "shot": 0}}
{"file size": {"output": "The file size of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Microsoft Swift key\", \"file size\", \"1.618e+08\"], [\"Crystal disk mark\", \"file size\", \"4e+06\"]]", "subjects": ["Microsoft Swift key", "Crystal disk mark"], "objects": ["1.618e+08", "4e+06"], "shot": 0}}
{"first air date": {"output": "<subject> first aired on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Wentworth\", \"first air date\", \"2020-07-28\"], [\"Vietnam Television\", \"first air date\", \"1970-09-07\"]]", "subjects": ["Wentworth", "Vietnam Television"], "objects": ["2020-07-28", "1970-09-07"], "shot": 0}}
{"first publication date": {"output": "<subject> was first published on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Last Round Arthurs\", \"first publication date\", \"2018-07-20\"], [\"Suspicion\", \"first publication date\", \"1984-08-12\"]]", "subjects": ["Last Round Arthurs", "Suspicion"], "objects": ["2018-07-20", "1984-08-12"], "shot": 0}}
{"frequency of publication": {"output": "{\"subject_entities\": [\"Journal of Applied Psychology\", \"Pinball\"],\n\"relation\": \"frequency of publication\",\n\"object_entities\": [\"Monthly\", \"Quarterly\"],\n\"agnostic_template\": \"The <subject> is published <object>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 61 (char 212)\"))"], "input_data": "[[\"Journal of Applied Psychology\", \"frequency of publication\", \"Monthly\"], [\"Pinball\", \"frequency of publication\", \"Quarterly\"]]", "subjects": ["Journal of Applied Psychology", "Pinball"], "objects": ["Monthly", "Quarterly"], "shot": 0}}
{"image size": {"output": "The image size of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Nova srpska politi\\u010dka misao\", \"image size\", \"300\"]]", "subjects": ["Nova srpska politi\u010dka misao"], "objects": ["300"], "shot": 0}}
{"ingredient name": {"output": "The ingredients of <subject> are <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Porchetta\", \"ingredient name\", \"pork,rosemary,garlic, andpepper\"], [\"Meatball soup\", \"ingredient name\", \"Meatballs,Ground meat,rice,spices\"]]", "subjects": ["Porchetta", "Meatball soup"], "objects": ["pork,rosemary,garlic, andpepper", "Meatballs,Ground meat,rice,spices"], "shot": 0}}
{"is handicapped accessible": {"output": "<subject> is is handicapped accessible with a rating of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Schiphol Airport railway station\", \"is handicapped accessible\", \"1\"]]", "subjects": ["Schiphol Airport railway station"], "objects": ["1"], "shot": 0}}
{"is part of name": {"output": "<subject> is a part of the name of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Devon Avenue\", \"is part of name\", \"6400 North\"], [\"Mandurah Road\", \"is part of name\", \"National Route 1\"]]", "subjects": ["Devon Avenue", "Mandurah Road"], "objects": ["6400 North", "National Route 1"], "shot": 0}}
{"kegg": {"output": "<subject> has the KEGG ID <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Lornoxicam\", \"kegg\", \"D01866\"]]", "subjects": ["Lornoxicam"], "objects": ["D01866"], "shot": 0}}
{"last election date": {"output": "The last election date for <subject> was on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"North Dakota House of Representatives\", \"last election date\", \"2020-11-03\"], [\"Northamptonshire County Council\", \"last election date\", \"2017-05-04\"]]", "subjects": ["North Dakota House of Representatives", "Northamptonshire County Council"], "objects": ["2020-11-03", "2017-05-04"], "shot": 0}}
{"last publication date": {"output": "The <subject> was last published on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Tomoyo After: It's a Wonderful Life\", \"last publication date\", \"2007-10-20\"], [\"Sorcerer Hunters\", \"last publication date\", \"1996-08-25\"]]", "subjects": ["Tomoyo After: It's a Wonderful Life", "Sorcerer Hunters"], "objects": ["2007-10-20", "1996-08-25"], "shot": 0}}
{"lcc": {"output": "<subject> has the LCC code <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Salem Falls\", \"lcc\", \"PS3566.I372 S26 2001\"]]", "subjects": ["Salem Falls"], "objects": ["PS3566.I372 S26 2001"], "shot": 0}}
{"load limit": {"output": "The <subject> has a load limit of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Riverton\\u2013Belvidere Bridge\", \"load limit\", \"50802.3\"], [\"Taoyaomen Bridge\", \"load limit\", \"2e+09\"]]", "subjects": ["Riverton\u2013Belvidere Bridge", "Taoyaomen Bridge"], "objects": ["50802.3", "2e+09"], "shot": 0}}
{"military unit size": {"output": "<subject> has a military unit size of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Hertfordshire Militia\", \"military unit size\", \"1\\u20133 Regiments\"]]", "subjects": ["Hertfordshire Militia"], "objects": ["1\u20133 Regiments"], "shot": 0}}
{"number of lines": {"output": "{\"subject_entities\": [\"Kazan Metro\", \"Santa Clara Valley Transportation Authority\"],\n\"relation\": \"number of lines\",\n\"object_entities\": [\"1\", \"70\"],\n\"agnostic_template\": \"<subject> has <object> <relation>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 59 (char 206)\"))"], "input_data": "[[\"Kazan Metro\", \"number of lines\", \"1\"], [\"Santa Clara Valley Transportation Authority\", \"number of lines\", \"70\"]]", "subjects": ["Kazan Metro", "Santa Clara Valley Transportation Authority"], "objects": ["1", "70"], "shot": 0}}
{"number of platform levels": {"output": "<subject> has <object> platform level(s).", "error_codes": [], "error_messages": [], "input_data": "[[\"Yugo-Zapadnaya\", \"number of platform levels\", \"1\"], [\"Esquimalt station\", \"number of platform levels\", \"1\"]]", "subjects": ["Yugo-Zapadnaya", "Esquimalt station"], "objects": ["1", "1"], "shot": 0}}
{"number of tracks": {"output": "<subject> has <object> tracks.", "error_codes": [], "error_messages": [], "input_data": "[[\"Ksi\\u0119cia Janusza metro station\", \"number of tracks\", \"2\"], [\"Home Hill railway station\", \"number of tracks\", \"2\"]]", "subjects": ["Ksi\u0119cia Janusza metro station", "Home Hill railway station"], "objects": ["2", "2"], "shot": 0}}
{"number sold": {"output": "{\"subject_entities\": [\"Jed Madela discography 2010 1\", \"List of best-selling albums by country 1994 3\"],\n\"relation\": \"number sold\",\n\"object_entities\": [\"10000\", \"1000000\"],\n\"agnostic_template\": \"The <subject> sold <object> copies.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 60 (char 232)\"))"], "input_data": "[[\"Jed Madela discography 2010 1\", \"number sold\", \"10000\"], [\"List of best-selling albums by country 1994 3\", \"number sold\", \"1000000\"]]", "subjects": ["Jed Madela discography 2010 1", "List of best-selling albums by country 1994 3"], "objects": ["10000", "1000000"], "shot": 0}}
{"oclc": {"output": "<subject> has the OCLC number <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Touched with Fire\", \"oclc\", \"85753373\"], [\"The Riddle of the Wren\", \"oclc\", \"10900735\"]]", "subjects": ["Touched with Fire", "The Riddle of the Wren"], "objects": ["85753373", "10900735"], "shot": 0}}
{"original name": {"output": "<subject> is also known as <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Carache Municipality\", \"original name\", \"Municipio Carache\"]]", "subjects": ["Carache Municipality"], "objects": ["Municipio Carache"], "shot": 0}}
{"other serving lines": {"output": "<subject> is served by <object> on other lines.", "error_codes": [], "error_messages": [], "input_data": "[[\"Heritage Crossing station\", \"other serving lines\", \"DART South Irving Go Link\"], [\"Kipling station\", \"other serving lines\", \"Bloor West\"]]", "subjects": ["Heritage Crossing station", "Kipling station"], "objects": ["DART South Irving Go Link", "Bloor West"], "shot": 0}}
{"parking information": {"output": "<subject> has <object> parking informatio.", "error_codes": [], "error_messages": [], "input_data": "[[\"Jurong Town Hall MRT station\", \"parking information\", \"Yes\"], [\"Rasskazovka\", \"parking information\", \"No\"]]", "subjects": ["Jurong Town Hall MRT station", "Rasskazovka"], "objects": ["Yes", "No"], "shot": 0}}
{"partial failed launches": {"output": "<subject> experienced partial failed launches of <object> during launch.", "error_codes": [], "error_messages": [], "input_data": "[[\"Viking\", \"partial failed launches\", \"4\"], [\"List of Delta 3 launches\", \"partial failed launches\", \"1\"]]", "subjects": ["Viking", "List of Delta 3 launches"], "objects": ["4", "1"], "shot": 0}}
{"passengers per year": {"output": "The <subject> has <object> passengers per year.", "error_codes": [], "error_messages": [], "input_data": "[[\"Santa Fe Depot\", \"passengers per year\", \"47644\"], [\"Minami-Hinaga Station\", \"passengers per year\", \"690\"]]", "subjects": ["Santa Fe Depot", "Minami-Hinaga Station"], "objects": ["47644", "690"], "shot": 0}}
{"pendamic deaths": {"output": "The number of pendamic deaths during the <subject> was <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"2014 Portugal legionellosis outbreak\", \"pendamic deaths\", \"12\"]]", "subjects": ["2014 Portugal legionellosis outbreak"], "objects": ["12"], "shot": 0}}
{"premiere date": {"output": "<subject> premiered on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Lady Day at Emerson's Bar and Grill\", \"premiere date\", \"1986-04-16\"], [\"Play Dead\", \"premiere date\", \"2010-11-10\"]]", "subjects": ["Lady Day at Emerson's Bar and Grill", "Play Dead"], "objects": ["1986-04-16", "2010-11-10"], "shot": 0}}
{"premiere year": {"output": "<subject> premiered in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"The Life of Rufus Dawes For the Term of His Natural Life 1\", \"premiere year\", \"1886\"], [\"Circle Mirror Transformation\", \"premiere year\", \"2009\"]]", "subjects": ["The Life of Rufus Dawes For the Term of His Natural Life 1", "Circle Mirror Transformation"], "objects": ["1886", "2009"], "shot": 0}}
{"railway platforms": {"output": "The <subject> has <object> railway platforms.", "error_codes": [], "error_messages": [], "input_data": "[[\"Lille-Flandres station\", \"railway platforms\", \"9\"], [\"Songjeong Park station\", \"railway platforms\", \"2\"]]", "subjects": ["Lille-Flandres station", "Songjeong Park station"], "objects": ["9", "2"], "shot": 0}}
{"recovery cases": {"output": "There are <object> recovery cases in <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"COVID-19 pandemic in Nunavut\", \"recovery cases\", \"670\"], [\"COVID-19 pandemic in Normandy\", \"recovery cases\", \"13743\"]]", "subjects": ["COVID-19 pandemic in Nunavut", "COVID-19 pandemic in Normandy"], "objects": ["670", "13743"], "shot": 0}}
{"route end direction": {"output": "The <subject> ends in the <object> directio.", "error_codes": [], "error_messages": [], "input_data": "[[\"National Route 9\", \"route end direction\", \"East\"], [\"New Brunswick Route 7\", \"route end direction\", \"South\"]]", "subjects": ["National Route 9", "New Brunswick Route 7"], "objects": ["East", "South"], "shot": 0}}
{"route start direction": {"output": "The route starting direction of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"State Highway 62\", \"route start direction\", \"East\"]]", "subjects": ["State Highway 62"], "objects": ["East"], "shot": 0}}
{"satcat": {"output": "The <subject> has a satcat of <object> in the satellite catalog.", "error_codes": [], "error_messages": [], "input_data": "[[\"Apollo 12\", \"satcat\", \"CSM: 4225\"], [\"Kosmos 2380\", \"satcat\", \"26989\"]]", "subjects": ["Apollo 12", "Kosmos 2380"], "objects": ["CSM: 4225", "26989"], "shot": 0}}
{"setting of play": {"output": "The setting of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"On the Rocks: A Political Comedy\", \"setting of play\", \"The near future\"], [\"Sweat\", \"setting of play\", \"Reading, Pennsylvania\"]]", "subjects": ["On the Rocks: A Political Comedy", "Sweat"], "objects": ["The near future", "Reading, Pennsylvania"], "shot": 0}}
{"start date": {"output": "The <subject> started on <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"1952 United States presidential election in Louisiana\", \"start date\", \"1952-11-04\"], [\"2021 Estonian presidential election\", \"start date\", \"2021-08-31\"]]", "subjects": ["1952 United States presidential election in Louisiana", "2021 Estonian presidential election"], "objects": ["1952-11-04", "2021-08-31"], "shot": 0}}
{"station structure": {"output": "{\"subject_entities\": [\"Yenikap\\u0131 Transfer Center Yenikap\\u0131 1\", \"Beixinjing station\"],\n\"relation\": \"station structure\",\n\"object_entities\": [\"Underground\", \"Underground\"],\n\"agnostic_template\": \"The <subject> is a <relation> that is located <object>.\" .\"}", "error_codes": ["<<err-parsing>>"], "error_messages": ["Could not parse [output] as valid json (JSONDecodeError(\"Expecting ',' delimiter: line 4 column 80 (char 257)\"))"], "input_data": "[[\"Yenikap\\u0131 Transfer Center Yenikap\\u0131 1\", \"station structure\", \"Underground\"], [\"Beixinjing station\", \"station structure\", \"Underground\"]]", "subjects": ["Yenikap\u0131 Transfer Center Yenikap\u0131 1", "Beixinjing station"], "objects": ["Underground", "Underground"], "shot": 0}}
{"subject of play": {"output": "<subject> is the subject of the play <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"A Very DNA Reunion\", \"subject of play\", \"DNAtechnology\"]]", "subjects": ["A Very DNA Reunion"], "objects": ["DNAtechnology"], "shot": 0}}
{"suspected cases": {"output": "There were <object> suspected cases during the <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"COVID-19 pandemic in Haiti\", \"suspected cases\", \"32304\"], [\"1924 Los Angeles pneumonic plague outbreak\", \"suspected cases\", \"37\"]]", "subjects": ["COVID-19 pandemic in Haiti", "1924 Los Angeles pneumonic plague outbreak"], "objects": ["32304", "37"], "shot": 0}}
{"symbol": {"output": "<subject> is represented by the symbol <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Vasoactive intestinal peptide receptor\", \"symbol\", \"ADCYAP1R1\"], [\"Chlorosome\", \"symbol\", \"Bac chlor c\"]]", "subjects": ["Vasoactive intestinal peptide receptor", "Chlorosome"], "objects": ["ADCYAP1R1", "Bac chlor c"], "shot": 0}}
{"tennis surface type": {"output": "The tennis surface type of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"2017 Bauer Watertechnology Cup\", \"tennis surface type\", \"Carpet\"]]", "subjects": ["2017 Bauer Watertechnology Cup"], "objects": ["Carpet"], "shot": 0}}
{"visitor statistics as of": {"output": "The visitor statistics of <subject> was <object> in visitor statistics as of.", "error_codes": [], "error_messages": [], "input_data": "[[\"Yenikap\\u0131 Transfer Center Yenikap\\u0131 1\", \"visitor statistics as of\", \"2017\"], [\"Arc-et-Senans station\", \"visitor statistics as of\", \"2018\"]]", "subjects": ["Yenikap\u0131 Transfer Center Yenikap\u0131 1", "Arc-et-Senans station"], "objects": ["2017", "2018"], "shot": 0}}
{"visitors percentage change": {"output": "The visitors percentage change of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Tlatelolco metro station\", \"visitors percentage change\", \"-41.57\"]]", "subjects": ["Tlatelolco metro station"], "objects": ["-41.57"], "shot": 0}}
{"year of electrification": {"output": "The <subject> was electrified in <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Buckower Chaussee station\", \"year of electrification\", \"0750\"], [\"Pasivedala railway station\", \"year of electrification\", \"0025\"]]", "subjects": ["Buckower Chaussee station", "Pasivedala railway station"], "objects": ["0750", "0025"], "shot": 0}}
{"depth": {"output": "The depth of <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Censorinus\", \"depth\", \"400.0\"], [\"Cocheras\", \"depth\", \"12.0\"]]", "subjects": ["Censorinus", "Cocheras"], "objects": ["400.0", "12.0"], "shot": 0}}
{"jstor": {"output": "<subject> is available on JSTOR with the identifier <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"The Journal of Economic History\", \"jstor\", \"00220507\"], [\"Journal of Speculative Philosophy\", \"jstor\", \"0891625X\"]]", "subjects": ["The Journal of Economic History", "Journal of Speculative Philosophy"], "objects": ["00220507", "0891625X"], "shot": 0}}
{"lccn": {"output": "<subject> has the LCCN <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Professional Ethics\", \"lccn\", \"93-660008\"], [\"Federal Law Review\", \"lccn\", \"77020319\"]]", "subjects": ["Professional Ethics", "Federal Law Review"], "objects": ["93-660008", "77020319"], "shot": 0}}
{"pdb": {"output": "The PDB code for <subject> is <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Barnase\", \"pdb\", \"1BRS\"], [\"RAR-related orphan receptor\", \"pdb\", \"1N83\"]]", "subjects": ["Barnase", "RAR-related orphan receptor"], "objects": ["1BRS", "1N83"], "shot": 0}}
{"is peer reviewed": {"output": "<subject> is is peer reviewed by <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Journal of Historical Review\", \"is peer reviewed\", \"0\"]]", "subjects": ["Journal of Historical Review"], "objects": ["0"], "shot": 0}}
{"county": {"output": "<subject> is located in <object> county.", "error_codes": [], "error_messages": [], "input_data": "[[\"Pendleton Heights High School\", \"county\", \"Madison County, Indiana\"], [\"Sharnbrook Academy\", \"county\", \"Bedfordshire\"]]", "subjects": ["Pendleton Heights High School", "Sharnbrook Academy"], "objects": ["Madison County, Indiana", "Bedfordshire"], "shot": 0}}
{"route end location": {"output": "The <subject> ends at <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Kingsway Tunnel Kingsway Tunnel 1\", \"route end location\", \"Merseyside\"], [\"Discovery Bay Tunnel\", \"route end location\", \"Siu Ho Wan\"]]", "subjects": ["Kingsway Tunnel Kingsway Tunnel 1", "Discovery Bay Tunnel"], "objects": ["Merseyside", "Siu Ho Wan"], "shot": 0}}
{"route start location": {"output": "<subject> starts at <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Tauern Railway Tunnel\", \"route start location\", \"Salzburg\"], [\"Jeddo Tunnel\", \"route start location\", \"Black Creek\"]]", "subjects": ["Tauern Railway Tunnel", "Jeddo Tunnel"], "objects": ["Salzburg", "Black Creek"], "shot": 0}}
{"us sales": {"output": "The <subject> had <object> units sold in the US.", "error_codes": [], "error_messages": [], "input_data": "[[\"Acura TSX 2010 1\", \"us sales\", \"126\"], [\"BMW 5 Series 1999 1\", \"us sales\", \"38218\"]]", "subjects": ["Acura TSX 2010 1", "BMW 5 Series 1999 1"], "objects": ["126", "38218"], "shot": 0}}
{"active years": {"output": "<subject> was active from <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Phoemela Baranda\", \"active years\", \"1999\\u2013present\"], [\"Merignac internment camp\", \"active years\", \"17 November 1940 \\u2013 26 August 1944\"]]", "subjects": ["Phoemela Baranda", "Merignac internment camp"], "objects": ["1999\u2013present", "17 November 1940 \u2013 26 August 1944"], "shot": 0}}
{"chorus character in play": {"output": "<object> are chorus characters in the play <subject>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Alcmaeon in Psophis\", \"chorus character in play\", \"Young women\"], [\"Ajax\", \"chorus character in play\", \"Sailors from salamis\"]]", "subjects": ["Alcmaeon in Psophis", "Ajax"], "objects": ["Young women", "Sailors from salamis"], "shot": 0}}
{"originally used for": {"output": "<subject> was originally used for <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Warsaw concentration camp\", \"originally used for\", \"G\\u0119si\\u00f3wkaprison\"], [\"Szebnie concentration camp\", \"originally used for\", \"Internment\"]]", "subjects": ["Warsaw concentration camp", "Szebnie concentration camp"], "objects": ["G\u0119si\u00f3wkaprison", "Internment"], "shot": 0}}
{"range": {"output": "<subject> has a range of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Mazibuko M1B\", \"range\", \"400\"], [\"Voyah Free\", \"range\", \"500\"]]", "subjects": ["Mazibuko M1B", "Voyah Free"], "objects": ["400", "500"], "shot": 0}}
{"victims": {"output": "The <subject> had <object> as victims.", "error_codes": [], "error_messages": [], "input_data": "[[\"Natzweiler-Struthof concentration camp Natzweiler-Struthof 1\", \"victims\", \"mainly resistance fighters from occupied European nations\"], [\"Monowitz concentration camp\", \"victims\", \"Mainly jews\"]]", "subjects": ["Natzweiler-Struthof concentration camp Natzweiler-Struthof 1", "Monowitz concentration camp"], "objects": ["mainly resistance fighters from occupied European nations", "Mainly jews"], "shot": 0}}
{"construction material": {"output": "<subject> is constructed using <object> as the construction material.", "error_codes": [], "error_messages": [], "input_data": "[[\"Red Bridge\", \"construction material\", \"Rock\"], [\"Landwasser Viaduct\", \"construction material\", \"Limestone\"]]", "subjects": ["Red Bridge", "Landwasser Viaduct"], "objects": ["Rock", "Limestone"], "shot": 0}}
{"former broadcast network": {"output": "<subject> was a former broadcast network of <object>.", "error_codes": [], "error_messages": [], "input_data": "[[\"Kentucky Channel\", \"former broadcast network\", \"KET ED\"], [\"NBC Montana\", \"former broadcast network\", \"CBS\"]]", "subjects": ["Kentucky Channel", "NBC Montana"], "objects": ["KET ED", "CBS"], "shot": 0}}
{"honours": {"output": "<subject> received <object> as an honour.", "error_codes": [], "error_messages": [], "input_data": "[[\"Wayne Meylan\", \"honours\", \"1967 College Football All-America Team\"], [\"Thomas Joseph Kelly\", \"honours\", \"National Museum of Racing and Hall of Fame\"]]", "subjects": ["Wayne Meylan", "Thomas Joseph Kelly"], "objects": ["1967 College Football All-America Team", "National Museum of Racing and Hall of Fame"], "shot": 0}}
{"important station": {"output": "<subject> considers <object> as an important statio.", "error_codes": [], "error_messages": [], "input_data": "[[\"Stagecoach Yorkshire\", \"important station\", \"Rotherham Interchange\"], [\"Stagecoach Yorkshire\", \"important station\", \"Meadowhall Interchange\"]]", "subjects": ["Stagecoach Yorkshire", "Stagecoach Yorkshire"], "objects": ["Rotherham Interchange", "Meadowhall Interchange"], "shot": 0}}
